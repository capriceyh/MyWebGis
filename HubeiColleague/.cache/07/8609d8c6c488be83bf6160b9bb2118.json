{"id":"../node_modules/geotiff/dist-module/source/basesource.js","dependencies":[{"name":"E:\\大三下\\WebGIS\\课设\\MyWebGis\\HubeiColleague\\package.json","includedInParent":true,"mtime":1657194913244},{"name":"E:\\大三下\\WebGIS\\课设\\MyWebGis\\HubeiColleague\\node_modules\\geotiff\\package.json","includedInParent":true,"mtime":1649118805018}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BaseSource = void 0;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n/**\n * @typedef Slice\n * @property {number} offset\n * @property {number} length\n */\nvar BaseSource = /*#__PURE__*/function () {\n  function BaseSource() {\n    _classCallCheck(this, BaseSource);\n  }\n\n  _createClass(BaseSource, [{\n    key: \"fetch\",\n    value:\n    /**\n     *\n     * @param {Slice[]} slices\n     * @returns {ArrayBuffer[]}\n     */\n    function () {\n      var _fetch = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(slices) {\n        var _this = this;\n\n        var signal,\n            _args = arguments;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                signal = _args.length > 1 && _args[1] !== undefined ? _args[1] : undefined;\n                return _context.abrupt(\"return\", Promise.all(slices.map(function (slice) {\n                  return _this.fetchSlice(slice, signal);\n                })));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function fetch(_x) {\n        return _fetch.apply(this, arguments);\n      }\n\n      return fetch;\n    }()\n    /**\n     *\n     * @param {Slice} slice\n     * @returns {ArrayBuffer}\n     */\n\n  }, {\n    key: \"fetchSlice\",\n    value: function () {\n      var _fetchSlice = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(slice) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                throw new Error(\"fetching of slice \".concat(slice, \" not possible, not implemented\"));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function fetchSlice(_x2) {\n        return _fetchSlice.apply(this, arguments);\n      }\n\n      return fetchSlice;\n    }()\n    /**\n     * Returns the filesize if already determined and null otherwise\n     */\n\n  }, {\n    key: \"fileSize\",\n    get: function get() {\n      return null;\n    }\n  }, {\n    key: \"close\",\n    value: function () {\n      var _close = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function close() {\n        return _close.apply(this, arguments);\n      }\n\n      return close;\n    }()\n  }]);\n\n  return BaseSource;\n}();\n\nexports.BaseSource = BaseSource;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":18,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":1,"column":0}},{"generated":{"line":19,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":2,"column":0}},{"generated":{"line":20,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":3,"column":0}},{"generated":{"line":21,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":4,"column":0}},{"generated":{"line":22,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":5,"column":0}},{"name":"BaseSource","generated":{"line":23,"column":4},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":7,"column":13}},{"generated":{"line":31,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":8,"column":2}},{"generated":{"line":32,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":9,"column":0}},{"generated":{"line":33,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":10,"column":0}},{"generated":{"line":34,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":11,"column":0}},{"generated":{"line":35,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":12,"column":0}},{"generated":{"line":37,"column":75},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":13,"column":2}},{"name":"slices","generated":{"line":37,"column":92},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":13,"column":14}},{"generated":{"line":37,"column":98},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":13,"column":2}},{"generated":{"line":38,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":13,"column":2}},{"generated":{"line":40,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":13,"column":2}},{"generated":{"line":41,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":13,"column":2}},{"generated":{"line":42,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":13,"column":2}},{"generated":{"line":43,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":13,"column":2}},{"generated":{"line":44,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":13,"column":2}},{"generated":{"line":45,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":13,"column":2}},{"name":"signal","generated":{"line":46,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":13,"column":22}},{"name":"signal","generated":{"line":46,"column":16},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":13,"column":22}},{"generated":{"line":46,"column":22},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":13,"column":2}},{"name":"undefined","generated":{"line":46,"column":81},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":13,"column":31}},{"generated":{"line":46,"column":90},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":13,"column":2}},{"generated":{"line":47,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":13,"column":2}},{"name":"Promise","generated":{"line":47,"column":49},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":14,"column":11}},{"generated":{"line":47,"column":56},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":14,"column":18}},{"name":"all","generated":{"line":47,"column":57},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":14,"column":19}},{"generated":{"line":47,"column":60},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":14,"column":11}},{"name":"slices","generated":{"line":47,"column":61},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":15,"column":6}},{"generated":{"line":47,"column":67},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":15,"column":12}},{"name":"map","generated":{"line":47,"column":68},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":15,"column":13}},{"generated":{"line":47,"column":71},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":15,"column":6}},{"generated":{"line":47,"column":72},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":15,"column":17}},{"name":"slice","generated":{"line":47,"column":82},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":15,"column":18}},{"generated":{"line":47,"column":87},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":15,"column":17}},{"generated":{"line":48,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":15,"column":17}},{"generated":{"line":48,"column":25},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":15,"column":28}},{"generated":{"line":48,"column":30},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":15,"column":32}},{"name":"fetchSlice","generated":{"line":48,"column":31},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":15,"column":33}},{"generated":{"line":48,"column":41},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":15,"column":28}},{"name":"slice","generated":{"line":48,"column":42},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":15,"column":44}},{"generated":{"line":48,"column":47},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":15,"column":28}},{"name":"signal","generated":{"line":48,"column":49},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":15,"column":51}},{"generated":{"line":48,"column":55},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":15,"column":28}},{"generated":{"line":48,"column":56},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":15,"column":17}},{"generated":{"line":49,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":15,"column":17}},{"generated":{"line":49,"column":17},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":15,"column":6}},{"generated":{"line":49,"column":18},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":14,"column":11}},{"generated":{"line":49,"column":19},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":13,"column":2}},{"generated":{"line":51,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":13,"column":2}},{"generated":{"line":52,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":13,"column":2}},{"generated":{"line":53,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":13,"column":2}},{"generated":{"line":54,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":13,"column":2}},{"generated":{"line":55,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":13,"column":2}},{"generated":{"line":56,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":13,"column":2}},{"generated":{"line":57,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":13,"column":2}},{"generated":{"line":65,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":19,"column":2}},{"generated":{"line":66,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":20,"column":0}},{"generated":{"line":67,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":21,"column":0}},{"generated":{"line":68,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":22,"column":0}},{"generated":{"line":69,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":23,"column":0}},{"generated":{"line":74,"column":80},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":24,"column":2}},{"name":"slice","generated":{"line":74,"column":98},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":24,"column":19}},{"generated":{"line":74,"column":103},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":24,"column":2}},{"generated":{"line":75,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":24,"column":2}},{"generated":{"line":76,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":24,"column":2}},{"generated":{"line":77,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":24,"column":2}},{"generated":{"line":78,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":24,"column":2}},{"generated":{"line":79,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":24,"column":2}},{"generated":{"line":79,"column":22},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":25,"column":10}},{"name":"Error","generated":{"line":79,"column":26},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":25,"column":14}},{"generated":{"line":79,"column":31},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":25,"column":10}},{"name":"slice","generated":{"line":79,"column":60},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":25,"column":41}},{"generated":{"line":79,"column":65},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":25,"column":10}},{"generated":{"line":79,"column":101},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":24,"column":2}},{"generated":{"line":81,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":24,"column":2}},{"generated":{"line":82,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":24,"column":2}},{"generated":{"line":83,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":24,"column":2}},{"generated":{"line":84,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":24,"column":2}},{"generated":{"line":85,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":24,"column":2}},{"generated":{"line":86,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":24,"column":2}},{"generated":{"line":87,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":24,"column":2}},{"generated":{"line":95,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":28,"column":2}},{"generated":{"line":96,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":29,"column":0}},{"generated":{"line":97,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":30,"column":0}},{"generated":{"line":101,"column":9},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":31,"column":2}},{"generated":{"line":101,"column":24},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":31,"column":17}},{"generated":{"line":102,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":32,"column":4}},{"generated":{"line":102,"column":13},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":32,"column":11}},{"generated":{"line":102,"column":17},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":32,"column":4}},{"generated":{"line":103,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":33,"column":3}},{"generated":{"line":107,"column":75},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":35,"column":2}},{"generated":{"line":108,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":35,"column":2}},{"generated":{"line":109,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":35,"column":2}},{"generated":{"line":110,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":35,"column":2}},{"generated":{"line":111,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":35,"column":2}},{"generated":{"line":112,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":35,"column":2}},{"generated":{"line":113,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":35,"column":2}},{"generated":{"line":114,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":35,"column":2}},{"generated":{"line":115,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":35,"column":2}},{"generated":{"line":116,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":35,"column":2}},{"generated":{"line":117,"column":0},"source":"../node_modules/geotiff/dist-module/source/basesource.js","original":{"line":35,"column":2}}],"sources":{"../node_modules/geotiff/dist-module/source/basesource.js":"/**\n * @typedef Slice\n * @property {number} offset\n * @property {number} length\n */\n\nexport class BaseSource {\n  /**\n   *\n   * @param {Slice[]} slices\n   * @returns {ArrayBuffer[]}\n   */\n  async fetch(slices, signal = undefined) {\n    return Promise.all(\n      slices.map((slice) => this.fetchSlice(slice, signal)),\n    );\n  }\n\n  /**\n   *\n   * @param {Slice} slice\n   * @returns {ArrayBuffer}\n   */\n  async fetchSlice(slice) {\n    throw new Error(`fetching of slice ${slice} not possible, not implemented`);\n  }\n\n  /**\n   * Returns the filesize if already determined and null otherwise\n   */\n  get fileSize() {\n    return null;\n  }\n\n  async close() {\n    // no-op by default\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"4640664ce6b0cb29328f30df741187e4","cacheData":{"env":{}}}